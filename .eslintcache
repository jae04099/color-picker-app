[{"/Users/gyurilee/Desktop/projects/color-picker-app/src/index.js":"1","/Users/gyurilee/Desktop/projects/color-picker-app/src/App.js":"2","/Users/gyurilee/Desktop/projects/color-picker-app/src/component/Cloud.js":"3","/Users/gyurilee/Desktop/projects/color-picker-app/src/component/PageTitle.js":"4","/Users/gyurilee/Desktop/projects/color-picker-app/src/component/CardList.js":"5","/Users/gyurilee/Desktop/projects/color-picker-app/src/component/Loading.js":"6","/Users/gyurilee/Desktop/projects/color-picker-app/src/context/Colors.js":"7"},{"size":243,"mtime":1632927679651,"results":"8","hashOfConfig":"9"},{"size":2170,"mtime":1634017097569,"results":"10","hashOfConfig":"9"},{"size":1095,"mtime":1632974095636,"results":"11","hashOfConfig":"9"},{"size":366,"mtime":1632911869986,"results":"12","hashOfConfig":"9"},{"size":1391,"mtime":1632987885849,"results":"13","hashOfConfig":"9"},{"size":378,"mtime":1632907155231,"results":"14","hashOfConfig":"9"},{"size":2736,"mtime":1632987893441,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"191eih8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/Users/gyurilee/Desktop/projects/color-picker-app/src/index.js",[],["35","36"],"/Users/gyurilee/Desktop/projects/color-picker-app/src/App.js",["37","38","39","40","41","42","43"],"/Users/gyurilee/Desktop/projects/color-picker-app/src/component/Cloud.js",["44","45","46","47","48","49"],"import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloud, faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./cloud.css\";\nimport { ColorContext } from \"../context/Colors\";\n\nconst Cloud = () => {\n    const {isLoading, setIsLoading, getSearch, search, cloudHex, shake, likeColor, isLiked, setColorInfo, colors} = useContext(ColorContext);\n    return (\n        <div className=\"heart-cloud-wrap\">\n            <div className=\"heart-emo\">\n                <FontAwesomeIcon\n                    icon={faHeart}\n                    onClick={likeColor, setColorInfo}\n                    className={isLiked}\n                />\n            </div>\n            <div className={`cloud-wrap ${shake ? \"shake-cloud\" : \"\"}`}>\n                <span className=\"cloudhexname\">{cloudHex}</span>\n                <FontAwesomeIcon\n                    icon={faCloud}\n                    className=\"cloud\"\n                    style={{ color: `${cloudHex}` }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Cloud;\n","/Users/gyurilee/Desktop/projects/color-picker-app/src/component/PageTitle.js",[],["50","51"],"/Users/gyurilee/Desktop/projects/color-picker-app/src/component/CardList.js",["52","53","54","55","56","57","58","59","60"],"import React, { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ColorContext } from \"../context/Colors\";\nimport \"./cards.css\";\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Cards = () => {\n    const { isLoading, setIsLoading, getSearch, search, cloudHex, shake, likeColor, isLiked, setColorInfo, colors, removeCard } = useContext(ColorContext);\n    return (\n        <>\n            {colors && colors.map((color, index) => {\n                return <div key={index} className=\"card\">\n                    <div className=\"main-card-color\" style={{ backgroundColor: color.hex }}></div>\n                    <div className=\"card-desc\">\n                        <ul value={color.title}>\n                            <li className=\"card-title\">{color.title}</li>\n                            <li className=\"card-code\">\n                                <p className=\"card-hex\">HEX : {color.hex}</p>\n                                <p className=\"card-rgb\">RGB : {color.r}, {color.g}, {color.b}</p>\n                            </li>\n                        </ul>\n                    <FontAwesomeIcon type=\"button\" className=\"del-btn\" value={color.title} onClick={removeCard} icon={faMinusCircle}></FontAwesomeIcon>\n                    </div>\n                </div>\n            })}\n        </>\n    )\n\n};\n\nexport default Cards;\n","/Users/gyurilee/Desktop/projects/color-picker-app/src/component/Loading.js",[],"/Users/gyurilee/Desktop/projects/color-picker-app/src/context/Colors.js",["61","62","63","64","65","66"],"import { useState, useEffect, useRef, createContext } from 'react';\n\nexport const ColorContext = createContext();\nexport const ColorProvider = props => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [colorNames, setColorNames] = useState(\"\");\n    const [likedColor, setLikedColor] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const [cloudHex, setCloudHex] = useState(\"ivory\");\n    const [shake, setShake] = useState(false);\n    const [isLiked, setIsLiked] = useState(\"heart\");\n    const [colors, setColors] = useState([\n    ]);\n    let likeColor = () => {\n        if (isLiked == \"heart\") {\n            setIsLiked(\"clicked-heart\");\n        } else {\n            setIsLiked(\"heart\");\n        }\n    };\n    const search = useRef(\"\");\n\n    useEffect(() => {\n        getColorLists();\n    }, [isLoading]);\n\n    useEffect(() => {\n        if (colorNames != \"\") {\n            isColor();\n        }\n    }, [query]);\n\n    useEffect(() => {\n    }, [colors])\n    const getColorLists = async () => {\n        const res = await fetch(`https://api.color.pizza/v1/`);\n        const data = await res.json();\n        setColorNames(data);\n        setIsLoading(true);\n    };\n    const setColorInfo = () => {\n        setColors([...colors, {\n            title: likedColor.name,\n                hex: likedColor.hex,\n                r: likedColor.rgb.r,\n                g: likedColor.rgb.g,\n                b: likedColor.rgb.b\n            }]\n        )\n    }\n\n    const removeCard = (e) => {\n        e.target.parentNode.parentNode.parentNode.remove()\n    }\n\n    const isColor = () => {\n        let makeUpper =\n            query.search(/\\s/) == -1\n                ? query.charAt(0).toUpperCase() + query.slice(1)\n                : query\n                    .split(\" \")\n                    .map((i) => i.charAt(0).toUpperCase() + i.slice(1))\n                    .join(\" \");\n\n        for (let i = 0; i < colorNames.colors.length; i++) {\n            if (colorNames.colors[i].name == makeUpper) {\n                setCloudHex(colorNames.colors[i].hex);\n                setLikedColor(colorNames.colors[i]);\n                setShake(false);\n                return;\n            } else if (i == colorNames.colors.length - 1) {\n                setShake(true);\n                setTimeout(() => {\n                    setShake(false);\n                }, 200);\n                return;\n            }\n        }\n    };\n\n    const getSearch = (e) => {\n        e.preventDefault();\n        setQuery(search.current.value);\n    };\n    return (\n        <ColorContext.Provider value={{ isLoading, setIsLoading, getSearch, search, cloudHex, shake, likeColor, isLiked, setColorInfo, colors, removeCard }} >{props.children}</ColorContext.Provider>\n    )\n}",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":15,"column":23,"nodeType":"73","messageId":"74","endLine":15,"endColumn":35},{"ruleId":"71","severity":1,"message":"75","line":15,"column":56,"nodeType":"73","messageId":"74","endLine":15,"endColumn":64},{"ruleId":"71","severity":1,"message":"76","line":15,"column":66,"nodeType":"73","messageId":"74","endLine":15,"endColumn":71},{"ruleId":"71","severity":1,"message":"77","line":15,"column":73,"nodeType":"73","messageId":"74","endLine":15,"endColumn":82},{"ruleId":"71","severity":1,"message":"78","line":15,"column":84,"nodeType":"73","messageId":"74","endLine":15,"endColumn":91},{"ruleId":"71","severity":1,"message":"79","line":15,"column":93,"nodeType":"73","messageId":"74","endLine":15,"endColumn":105},{"ruleId":"71","severity":1,"message":"80","line":15,"column":107,"nodeType":"73","messageId":"74","endLine":15,"endColumn":113},{"ruleId":"71","severity":1,"message":"81","line":8,"column":12,"nodeType":"73","messageId":"74","endLine":8,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":8,"column":23,"nodeType":"73","messageId":"74","endLine":8,"endColumn":35},{"ruleId":"71","severity":1,"message":"82","line":8,"column":37,"nodeType":"73","messageId":"74","endLine":8,"endColumn":46},{"ruleId":"71","severity":1,"message":"83","line":8,"column":48,"nodeType":"73","messageId":"74","endLine":8,"endColumn":54},{"ruleId":"71","severity":1,"message":"80","line":8,"column":107,"nodeType":"73","messageId":"74","endLine":8,"endColumn":113},{"ruleId":"84","severity":1,"message":"85","line":14,"column":39,"nodeType":"86","messageId":"87","endLine":14,"endColumn":40},{"ruleId":"67","replacedBy":"88"},{"ruleId":"69","replacedBy":"89"},{"ruleId":"71","severity":1,"message":"81","line":8,"column":13,"nodeType":"73","messageId":"74","endLine":8,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":8,"column":24,"nodeType":"73","messageId":"74","endLine":8,"endColumn":36},{"ruleId":"71","severity":1,"message":"82","line":8,"column":38,"nodeType":"73","messageId":"74","endLine":8,"endColumn":47},{"ruleId":"71","severity":1,"message":"83","line":8,"column":49,"nodeType":"73","messageId":"74","endLine":8,"endColumn":55},{"ruleId":"71","severity":1,"message":"75","line":8,"column":57,"nodeType":"73","messageId":"74","endLine":8,"endColumn":65},{"ruleId":"71","severity":1,"message":"76","line":8,"column":67,"nodeType":"73","messageId":"74","endLine":8,"endColumn":72},{"ruleId":"71","severity":1,"message":"77","line":8,"column":74,"nodeType":"73","messageId":"74","endLine":8,"endColumn":83},{"ruleId":"71","severity":1,"message":"78","line":8,"column":85,"nodeType":"73","messageId":"74","endLine":8,"endColumn":92},{"ruleId":"71","severity":1,"message":"79","line":8,"column":94,"nodeType":"73","messageId":"74","endLine":8,"endColumn":106},{"ruleId":"90","severity":1,"message":"91","line":15,"column":21,"nodeType":"92","messageId":"93","endLine":15,"endColumn":23},{"ruleId":"90","severity":1,"message":"94","line":28,"column":24,"nodeType":"92","messageId":"93","endLine":28,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":31,"column":8,"nodeType":"97","endLine":31,"endColumn":15,"suggestions":"98"},{"ruleId":"90","severity":1,"message":"91","line":58,"column":32,"nodeType":"92","messageId":"93","endLine":58,"endColumn":34},{"ruleId":"90","severity":1,"message":"91","line":66,"column":43,"nodeType":"92","messageId":"93","endLine":66,"endColumn":45},{"ruleId":"90","severity":1,"message":"91","line":71,"column":26,"nodeType":"92","messageId":"93","endLine":71,"endColumn":28},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'setIsLoading' is assigned a value but never used.","Identifier","unusedVar","'cloudHex' is assigned a value but never used.","'shake' is assigned a value but never used.","'likeColor' is assigned a value but never used.","'isLiked' is assigned a value but never used.","'setColorInfo' is assigned a value but never used.","'colors' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'getSearch' is assigned a value but never used.","'search' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["99"],["100"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'colorNames' and 'isColor'. Either include them or remove the dependency array.","ArrayExpression",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [colorNames, isColor, query]",{"range":"104","text":"105"},[932,939],"[colorNames, isColor, query]"]